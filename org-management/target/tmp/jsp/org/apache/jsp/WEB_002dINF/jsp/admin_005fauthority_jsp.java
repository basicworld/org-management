/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.2.2.v20140723
 * Generated at: 2019-04-23 09:54:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class admin_005fauthority_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div style=\"background-color: #fff;\">\r\n");
      out.write("\t<div class=\"h40 pt5\" style=\"background-color: #ddd;\">\r\n");
      out.write("\t\t<button type=\"button\" class=\"btn btn-sm btn-primary\"\r\n");
      out.write("\t\t\tstyle=\"float: right;\" onclick=\"reloadHomePage()\">刷新</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("权限管理\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-lg-8 col-lg-offset-2\">\r\n");
      out.write("            <div class=\"page-header\">\r\n");
      out.write("                <h2>Using Ajax to submit data</h2>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <form id=\"defaultForm\" method=\"post\" class=\"form-horizontal\" action=\"ajaxSubmit.php\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label class=\"col-lg-3 control-label\">Username</label>\r\n");
      out.write("                    <div class=\"col-lg-5\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" name=\"username\" />\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label class=\"col-lg-3 control-label\">Email address</label>\r\n");
      out.write("                    <div class=\"col-lg-5\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" name=\"email\" />\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label class=\"col-lg-3 control-label\">Password</label>\r\n");
      out.write("                    <div class=\"col-lg-5\">\r\n");
      out.write("                        <input type=\"password\" class=\"form-control\" name=\"password\" />\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <div class=\"col-lg-9 col-lg-offset-3\">\r\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary\">Sign up</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("    $('#defaultForm')\r\n");
      out.write("        .bootstrapValidator({\r\n");
      out.write("            message: 'This value is not valid',\r\n");
      out.write("            feedbackIcons: {\r\n");
      out.write("                valid: 'glyphicon glyphicon-ok',\r\n");
      out.write("                invalid: 'glyphicon glyphicon-remove',\r\n");
      out.write("                validating: 'glyphicon glyphicon-refresh'\r\n");
      out.write("            },\r\n");
      out.write("            fields: {\r\n");
      out.write("                username: {\r\n");
      out.write("                    message: 'The username is not valid',\r\n");
      out.write("                    validators: {\r\n");
      out.write("                        notEmpty: {\r\n");
      out.write("                            message: 'The username is required and can\\'t be empty'\r\n");
      out.write("                        },\r\n");
      out.write("                        stringLength: {\r\n");
      out.write("                            min: 6,\r\n");
      out.write("                            max: 30,\r\n");
      out.write("                            message: 'The username must be more than 6 and less than 30 characters long'\r\n");
      out.write("                        },\r\n");
      out.write("                        /*remote: {\r\n");
      out.write("                            url: 'remote.php',\r\n");
      out.write("                            message: 'The username is not available'\r\n");
      out.write("                        },*/\r\n");
      out.write("                        regexp: {\r\n");
      out.write("                            regexp: /^[a-zA-Z0-9_\\.]+$/,\r\n");
      out.write("                            message: 'The username can only consist of alphabetical, number, dot and underscore'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                email: {\r\n");
      out.write("                    validators: {\r\n");
      out.write("                        notEmpty: {\r\n");
      out.write("                            message: 'The email address is required and can\\'t be empty'\r\n");
      out.write("                        },\r\n");
      out.write("                        emailAddress: {\r\n");
      out.write("                            message: 'The input is not a valid email address'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                password: {\r\n");
      out.write("                    validators: {\r\n");
      out.write("                        notEmpty: {\r\n");
      out.write("                            message: 'The password is required and can\\'t be empty'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("        .on('success.form.bv', function(e) {\r\n");
      out.write("            // Prevent form submission\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("            // Get the form instance\r\n");
      out.write("            var $form = $(e.target);\r\n");
      out.write("\r\n");
      out.write("            // Get the BootstrapValidator instance\r\n");
      out.write("            var bv = $form.data('bootstrapValidator');\r\n");
      out.write("\r\n");
      out.write("            // Use Ajax to submit form data\r\n");
      out.write("            $.post($form.attr('action'), $form.serialize(), function(result) {\r\n");
      out.write("                console.log(result);\r\n");
      out.write("            }, 'json');\r\n");
      out.write("        });\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
